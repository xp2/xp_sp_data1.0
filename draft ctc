#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
these code extract data from sp csv files, calculate, combine and output a single csv file for further analysis

How to use:
1.put this file within the control folder which contains all the sp csv files (generated from imaris software)
2.run
3.output a control_results.csv in the control folder

By J. Liu 
Created on Mon Dec  3 12:19:22 2018
"""

import pandas as pd
import glob
import os

pypath=os.path.dirname(os.path.abspath('__file__'))

#Control

dsctrlist=[]
#density from control
dscontrol=glob.glob(pypath+'/*_OverallStats.csv')
for dsctrfile in dscontrol:
    ds=pd.read_csv(dsctrfile,usecols=[0,2])
    dsctrlist.append(ds)
dsctrlist=pd.concat(dsctrlist,axis=0,ignore_index=True)
dsctrlist.set_index(['ImageName'],inplace=True)
dsctrlist=dsctrlist[~(dsctrlist==0).any(axis=1)]/200/163.84
ctr_ds=dsctrlist.TotalNumberOfSpots
ctr_ds.name='ctr_density'

diactrlist=[]
#diameter from control,read and combine (append then concat) files
diacontrol=glob.glob(pypath+'/*_objects.csv')
for diactrfile in diacontrol:
    dia=pd.read_csv(diactrfile,usecols=[0,2])
    dia['trt']='ctr'       
    diactrlist.append(dia)
diactrlist=pd.concat(diactrlist,axis=0,ignore_index=True)
diactrlist.set_index(['trt','ImageName'],inplace=True)

#diameter from control, calculation
ctr_dia_byimg=diactrlist.groupby(by='ImageName')
ctr_dia_count=ctr_dia_byimg.count().DiameterX
ctr_dia_count.name='ctr_dia_count'
ctr_dia_avg=ctr_dia_byimg.mean().DiameterX
ctr_dia_avg.name='ctr_dia_avg'

diactr=diactrlist.DiameterX
ctr_dia_300=diactr[diactr>0.3].groupby(by='ImageName').count()
ctr_dia_300.name='ctr_dia_300'
ctr_dia_300freq=ctr_dia_300/ctr_dia_count
ctr_dia_300freq.name='ctr_dia_300freq'

#track from control, read and combine (append then concat) files
trackctrlist=[]
trackcontrol=glob.glob(pypath+'/*_tracks.csv')
for trackctrfile in trackcontrol:
    track=pd.read_csv(trackctrfile, usecols=[0,2,3])
    track['trt']='ctr'
    trackctrlist.append(track)
trackctrlist=pd.concat(trackctrlist,axis=0,ignore_index=True)
trackctrlist.set_index(['trt','ImageName'],inplace=True)

#duration from control, calculation
ctr_dur_byimg=trackctrlist.TrackDuration.groupby(by='ImageName')
ctr_dur_count=ctr_dur_byimg.count()
ctr_dur_count.name='ctr_dur_count'
ctr_dur_avg=ctr_dur_byimg.mean()
ctr_dur_avg.name='ctr_dur_avg'

#duration bin1
ctr_dur=trackctrlist.TrackDuration
ctr_dur_150=ctr_dur[ctr_dur<=0.15].groupby(by='ImageName').count()
ctr_dur_150.name='ctr_dur_150'
ctr_dur_150freq=ctr_dur_150/ctr_dur_count
ctr_dur_150freq.name='ctr_dur_150freq'
ctr_dur_150_450=ctr_dur[(ctr_dur>0.15)&(ctr_dur<0.45)].groupby(by='ImageName').count()
ctr_dur_150_450.name='ctr_dur_150_450'
ctr_dur_150_450freq=ctr_dur_150_450/ctr_dur_count
ctr_dur_150_450freq.name='ctr_dur_150_450freq'
ctr_dur_450=ctr_dur[ctr_dur>=0.45].groupby(by='ImageName').count()
ctr_dur_450.name='ctr_dur_450'
ctr_dur_450freq=ctr_dur_450/ctr_dur_count
ctr_dur_450freq.name='ctr_dur_450freq'
#duration bin2
ctr_dur_300=ctr_dur[ctr_dur<=0.3].groupby(by='ImageName').count()
ctr_dur_300.name='ctr_dur_300'
ctr_dur_300freq=ctr_dur_300/ctr_dur_count
ctr_dur_300freq.name='ctr_dur_300freq'
ctr_dur_300_900=ctr_dur[(ctr_dur>0.3)&(ctr_dur<0.9)].groupby(by='ImageName').count()
ctr_dur_300_900.name='ctr_dur_300_900'
ctr_dur_300_900freq=ctr_dur_300_900/ctr_dur_count
ctr_dur_300_900freq.name='ctr_dur_300_900freq'
ctr_dur_900=ctr_dur[ctr_dur>=0.9].groupby(by='ImageName').count()
ctr_dur_900.name='ctr_dur_900'
ctr_dur_900freq=ctr_dur_900/ctr_dur_count
ctr_dur_900freq.name='ctr_dur_900freq'

#displacement from control, calculation
ctr_dis_byimg=trackctrlist.TrackDisplacementLength.groupby(by='ImageName')

ctr_dis_count=ctr_dis_byimg.count()
ctr_dis_count.name='ctr_dis_count'
ctr_dis_avg=ctr_dis_byimg.mean()  
ctr_dis_avg.name='ctr_dis_avg'

#displacement bin1
ctr_dis=trackctrlist.TrackDisplacementLength
ctr_dis_400=ctr_dis[ctr_dis<=0.4].groupby(by='ImageName').count()
ctr_dis_400.name='ctr_dis_400'
ctr_dis_400freq=ctr_dis_400/ctr_dis_count
ctr_dis_400freq.name='ctr_dis_400freq'
ctr_dis_400_800=ctr_dis[(ctr_dis>0.4)&(ctr_dis<0.8)].groupby(by='ImageName').count()
ctr_dis_400_800.name='ctr_dis_400_800'
ctr_dis_400_800freq=ctr_dis_400_800/ctr_dis_count
ctr_dis_400_800freq.name='ctr_dis_400_800freq'
ctr_dis_800=ctr_dis[ctr_dis>=0.8].groupby(by='ImageName').count()
ctr_dis_800.name='ctr_dis_800'
ctr_dis_800freq=ctr_dis_800/ctr_dis_count
ctr_dis_800freq.name='ctr_dis_800freq'

#displacement bin2
ctr_dis_less200=ctr_dis[ctr_dis<=0.2].groupby(by='ImageName').count()
ctr_dis_less200.name='ctr_dis_less200'
ctr_dis_la200=ctr_dis[ctr_dis>0.2].groupby(by='ImageName').count()
ctr_dis_la200.name='ctr_dis_la200'
ctr_dis_less200freq=ctr_dis_less200/ctr_dis_count
ctr_dis_less200freq.name='ctr_dis_less200freq'
ctr_dis_la200freq=ctr_dis_la200/ctr_dis_count
ctr_dis_la200freq.name='ctr_dis_la200freq'


#combine all features of control
var_ctr=[ctr_ds,
         ctr_dia_avg,
         ctr_dia_300,ctr_dia_300freq,
         ctr_dur_avg,
         ctr_dur_150, ctr_dur_150_450, ctr_dur_450,  
         ctr_dur_300, ctr_dur_300_900, ctr_dur_900,  
         ctr_dur_150freq, ctr_dur_150_450freq, ctr_dur_450freq,  
         ctr_dur_300freq, ctr_dur_300_900freq, ctr_dur_900freq,  
         ctr_dis_avg,  
         ctr_dis_400, ctr_dis_400_800, ctr_dis_800, 
         ctr_dis_400freq, ctr_dis_400_800freq, ctr_dis_800freq,
         ctr_dis_less200, ctr_dis_la200,
         ctr_dis_less200freq, ctr_dis_la200freq]

control_results=pd.concat(var_ctr,axis=1)
control_results['trt']='ctr'
control_results.index.name='ImageName'
control_results.reset_index(drop=False,inplace=True)
control_results.set_index(['trt','ImageName'],inplace=True)

control_results.to_csv(pypath+'/control_results.csv')
